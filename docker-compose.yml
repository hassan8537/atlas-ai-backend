version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: motor-postgres
    environment:
      POSTGRES_DB: ${dbname:-motor_backend}
      POSTGRES_USER: ${username:-postgres}
      POSTGRES_PASSWORD: ${password:-postgres}
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "${port:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - motor-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${username:-postgres} -d ${dbname:-motor_backend}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Application
  app:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: motor-backend
    environment:
      NODE_ENV: ${NODE_ENV:-production}
      PORT: ${PORT:-3000}
      host: postgres
      port: 5432
      dbname: ${dbname:-motor_backend}
      username: ${username:-postgres}
      password: ${password:-postgres}
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt-key}
      AWS_REGION: ${AWS_REGION}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_S3_BUCKET_NAME: ${AWS_S3_BUCKET_NAME}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
    ports:
      - "${PORT:-3000}:3000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - motor-network
    restart: unless-stopped
    volumes:
      # Mount .env file if it exists
      - ./.env:/app/.env:ro
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  postgres_data:
    driver: local

networks:
  motor-network:
    driver: bridge
